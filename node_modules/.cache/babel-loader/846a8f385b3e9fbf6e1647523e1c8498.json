{"ast":null,"code":"var _jsxFileName = \"/Users/donghyun/Desktop/react/redux-http-request/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, fetchCartData } from './store/cart-actions';\nimport uiSlice from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiSlice.actions.setNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'pending cart data!'\n      }));\n      const response = await fetch('https://section19-6f56e-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        dispatch(uiSlice.actions.setNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending cart data failed!'\n        }));\n      }\n\n      dispatch(uiSlice.actions.setNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    };\n\n    sendCartData();\n  }, [cart, dispatch]); // useEffect(() => {\n  //   dispatch(fetchCartData());\n  // }, [dispatch]);\n  // useEffect(() => {\n  //   if (isInitial) {\n  //     isInitial = false;\n  //     return;\n  //   }\n  //   if (cart.changed) {\n  //     dispatch(sendCartData(cart));\n  //   }\n  // }, [dispatch, cart]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ehCohhP2aa32ZqjJpKSQJfg1I0A=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/donghyun/Desktop/react/redux-http-request/src/App.js"],"names":["useSelector","useDispatch","useEffect","Cart","Layout","Products","Notification","sendCartData","fetchCartData","uiSlice","isInitial","App","cartIsVisible","state","ui","cart","notification","dispatch","actions","setNotification","status","title","message","response","fetch","method","body","JSON","stringify","headers","ok"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,sBAA5C;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,aAAa,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASF,aAAnB,CAAjC;AACA,QAAMG,IAAI,GAAGf,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAAxB;AACA,QAAMC,YAAY,GAAGhB,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASE,YAAnB,CAAhC;AAEA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMK,YAAY,GAAG,YAAY;AAC/BU,MAAAA,QAAQ,CACNR,OAAO,CAACS,OAAR,CAAgBC,eAAhB,CAAgC;AAC9BC,QAAAA,MAAM,EAAE,SADsB;AAE9BC,QAAAA,KAAK,EAAE,YAFuB;AAG9BC,QAAAA,OAAO,EAAE;AAHqB,OAAhC,CADM,CAAR;AAQA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAFR;AAGEc,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHX,OAF0B,CAA5B;;AAWA,UAAI,CAACN,QAAQ,CAACO,EAAd,EAAkB;AAChBb,QAAAA,QAAQ,CACNR,OAAO,CAACS,OAAR,CAAgBC,eAAhB,CAAgC;AAC9BC,UAAAA,MAAM,EAAE,OADsB;AAE9BC,UAAAA,KAAK,EAAE,QAFuB;AAG9BC,UAAAA,OAAO,EAAE;AAHqB,SAAhC,CADM,CAAR;AAOD;;AAEDL,MAAAA,QAAQ,CACNR,OAAO,CAACS,OAAR,CAAgBC,eAAhB,CAAgC;AAC9BC,QAAAA,MAAM,EAAE,SADsB;AAE9BC,QAAAA,KAAK,EAAE,UAFuB;AAG9BC,QAAAA,OAAO,EAAE;AAHqB,OAAhC,CADM,CAAR;AAOD,KArCD;;AAuCAf,IAAAA,YAAY;AACb,GAzCQ,EAyCN,CAACQ,IAAD,EAAOE,QAAP,CAzCM,CAAT,CAPa,CAkDb;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,eACGD,YAAY,iBACX,QAAC,YAAD;AACE,MAAA,MAAM,EAAEA,YAAY,CAACI,MADvB;AAEE,MAAA,KAAK,EAAEJ,YAAY,CAACK,KAFtB;AAGE,MAAA,OAAO,EAAEL,YAAY,CAACM;AAHxB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE,QAAC,MAAD;AAAA,iBACGV,aAAa,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADpB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAeD;;GAhFQD,G;UACeX,W,EACTA,W,EACQA,W,EAEJC,W;;;KALVU,G;AAkFT,eAAeA,GAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport Notification from './components/UI/Notification';\nimport { sendCartData, fetchCartData } from './store/cart-actions';\nimport uiSlice from './store/ui-slice';\n\nlet isInitial = true;\n\nfunction App() {\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(\n        uiSlice.actions.setNotification({\n          status: 'pending',\n          title: 'Sending...',\n          message: 'pending cart data!'\n        })\n      );\n\n      const response = await fetch(\n        'https://section19-6f56e-default-rtdb.firebaseio.com/cart.json',\n        {\n          method: 'PUT',\n          body: JSON.stringify(cart),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (!response.ok) {\n        dispatch(\n          uiSlice.actions.setNotification({\n            status: 'error',\n            title: 'Error!',\n            message: 'Sending cart data failed!'\n          })\n        );\n      }\n\n      dispatch(\n        uiSlice.actions.setNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent cart data successfully!'\n        })\n      );\n    };\n\n    sendCartData();\n  }, [cart, dispatch]);\n\n  // useEffect(() => {\n  //   dispatch(fetchCartData());\n  // }, [dispatch]);\n\n  // useEffect(() => {\n  //   if (isInitial) {\n  //     isInitial = false;\n  //     return;\n  //   }\n\n  //   if (cart.changed) {\n  //     dispatch(sendCartData(cart));\n  //   }\n  // }, [dispatch, cart]);\n\n  return (\n    <>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}