{"ast":null,"code":"var _jsxFileName = \"/Users/gimdonghyeon/Desktop/udemy/react/redux-deepdive/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(uiActions.setNotification({\n      status: 'pending',\n      title: 'Sending,,,',\n      message: 'Sending Cart data!'\n    }));\n\n    const sendCartData = async () => {\n      const response = await fetch('https://react-http-be658-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        dispatch(uiActions.setNotification({\n          status: 'error',\n          title: 'Error,,,',\n          message: 'Sending Cart data failed!'\n        }));\n      }\n\n      dispatch(uiActions.setNotification({\n        status: 'success',\n        title: 'Success,,,',\n        message: 'Sent Cart data successfully!'\n      }));\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(uiActions.setNotification({\n        status: 'error',\n        title: 'Error,,,',\n        message: 'Sending Cart data failed!'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ehCohhP2aa32ZqjJpKSQJfg1I0A=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimdonghyeon/Desktop/udemy/react/redux-deepdive/src/App.js"],"names":["useSelector","useDispatch","useEffect","Cart","Layout","Products","uiActions","Notification","isInitial","App","cartIsVisible","state","ui","cart","notification","dispatch","setNotification","status","title","message","sendCartData","response","fetch","method","body","JSON","stringify","ok","catch","error"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,aAAa,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASF,aAAnB,CAAjC;AACA,QAAMG,IAAI,GAAGb,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAAxB;AACA,QAAMC,YAAY,GAAGd,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASE,YAAnB,CAAhC;AAEA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CACNT,SAAS,CAACU,eAAV,CAA0B;AACxBC,MAAAA,MAAM,EAAE,SADgB;AAExBC,MAAAA,KAAK,EAAE,YAFiB;AAGxBC,MAAAA,OAAO,EAAE;AAHe,KAA1B,CADM,CAAR;;AAQA,UAAMC,YAAY,GAAG,YAAY;AAC/B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACQ,QAAQ,CAACM,EAAd,EAAkB;AAChBZ,QAAAA,QAAQ,CACNT,SAAS,CAACU,eAAV,CAA0B;AACxBC,UAAAA,MAAM,EAAE,OADgB;AAExBC,UAAAA,KAAK,EAAE,UAFiB;AAGxBC,UAAAA,OAAO,EAAE;AAHe,SAA1B,CADM,CAAR;AAOD;;AAEDJ,MAAAA,QAAQ,CACNT,SAAS,CAACU,eAAV,CAA0B;AACxBC,QAAAA,MAAM,EAAE,SADgB;AAExBC,QAAAA,KAAK,EAAE,YAFiB;AAGxBC,QAAAA,OAAO,EAAE;AAHe,OAA1B,CADM,CAAR;AAOD,KA1BD;;AA4BA,QAAIX,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAEDY,IAAAA,YAAY,GAAGQ,KAAf,CAAqBC,KAAK,IAAI;AAC5Bd,MAAAA,QAAQ,CACNT,SAAS,CAACU,eAAV,CAA0B;AACxBC,QAAAA,MAAM,EAAE,OADgB;AAExBC,QAAAA,KAAK,EAAE,UAFiB;AAGxBC,QAAAA,OAAO,EAAE;AAHe,OAA1B,CADM,CAAR;AAOD,KARD;AASD,GAnDQ,EAmDN,CAACN,IAAD,EAAOE,QAAP,CAnDM,CAAT;AAqDA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,MAAM,EAAED,YAAY,CAACG,MADvB;AAEE,MAAA,KAAK,EAAEH,YAAY,CAACI,KAFtB;AAGE,MAAA,OAAO,EAAEJ,YAAY,CAACK;AAHxB;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,MAAD;AAAA,iBACGT,aAAa,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADpB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAaD;;GAzEQD,G;UACeT,W,EACTA,W,EACQA,W,EAEJC,W;;;KALVQ,G;AA2ET,eAAeA,GAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport Notification from './components/UI/Notification';\n\nlet isInitial = true;\n\nfunction App() {\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      uiActions.setNotification({\n        status: 'pending',\n        title: 'Sending,,,',\n        message: 'Sending Cart data!'\n      })\n    );\n\n    const sendCartData = async () => {\n      const response = await fetch(\n        'https://react-http-be658-default-rtdb.firebaseio.com/cart.json',\n        {\n          method: 'PUT',\n          body: JSON.stringify(cart)\n        }\n      );\n\n      if (!response.ok) {\n        dispatch(\n          uiActions.setNotification({\n            status: 'error',\n            title: 'Error,,,',\n            message: 'Sending Cart data failed!'\n          })\n        );\n      }\n\n      dispatch(\n        uiActions.setNotification({\n          status: 'success',\n          title: 'Success,,,',\n          message: 'Sent Cart data successfully!'\n        })\n      );\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => {\n      dispatch(\n        uiActions.setNotification({\n          status: 'error',\n          title: 'Error,,,',\n          message: 'Sending Cart data failed!'\n        })\n      );\n    });\n  }, [cart, dispatch]);\n\n  return (\n    <>\n      <Notification\n        status={notification.status}\n        title={notification.title}\n        message={notification.message}\n      />\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}