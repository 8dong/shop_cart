{"ast":null,"code":"import { cartActions } from './cart-slice';\nimport { uiActions } from './ui-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://section19-6f56e-default-rtdb.firebaseio.com/cart.json');\n\n      if (!response.ok) {\n        throw new Error('fetch failed!');\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      console.log(cartData);\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.setNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending Cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.setNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending Cart data!'\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch('https://section19-6f56e-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart),\n        'Content-Type': 'application/json'\n      });\n\n      if (!response.ok) {\n        throw new Error('Send Cart Data failed!');\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.setNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent Cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.setNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending Cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/donghyun/Desktop/react/redux-http-request/src/store/cart-actions.js"],"names":["cartActions","uiActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","console","log","replaceCart","error","setNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,WAAT,QAA4B,cAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAMC,QAAN,IAAkB;AACvB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACD,KAVD;;AAYA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAR,MAAAA,QAAQ,CAACH,WAAW,CAACc,WAAZ,CAAwBH,QAAxB,CAAD,CAAR;AACD,KALD,CAKE,OAAOI,KAAP,EAAc;AACdZ,MAAAA,QAAQ,CACNF,SAAS,CAACe,eAAV,CAA0B;AACxBC,QAAAA,MAAM,EAAE,OADgB;AAExBC,QAAAA,KAAK,EAAE,QAFiB;AAGxBC,QAAAA,OAAO,EAAE;AAHe,OAA1B,CADM,CAAR;AAOD;AACF,GA3BD;AA4BD,CA7BM;AA+BP,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAI;AAClC,SAAO,MAAMlB,QAAN,IAAkB;AACvBA,IAAAA,QAAQ,CACNF,SAAS,CAACe,eAAV,CAA0B;AACxBC,MAAAA,MAAM,EAAE,SADgB;AAExBC,MAAAA,KAAK,EAAE,YAFiB;AAGxBC,MAAAA,OAAO,EAAE;AAHe,KAA1B,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,+DAD0B,EAE1B;AACEiB,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFR;AAGE,wBAAgB;AAHlB,OAF0B,CAA5B;;AASA,UAAI,CAAChB,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACD;AACF,KAbD;;AAeA,QAAI;AACF,YAAMc,WAAW,EAAjB;AAEAnB,MAAAA,QAAQ,CACNF,SAAS,CAACe,eAAV,CAA0B;AACxBC,QAAAA,MAAM,EAAE,SADgB;AAExBC,QAAAA,KAAK,EAAE,UAFiB;AAGxBC,QAAAA,OAAO,EAAE;AAHe,OAA1B,CADM,CAAR;AAOD,KAVD,CAUE,OAAOJ,KAAP,EAAc;AACdZ,MAAAA,QAAQ,CACNF,SAAS,CAACe,eAAV,CAA0B;AACxBC,QAAAA,MAAM,EAAE,OADgB;AAExBC,QAAAA,KAAK,EAAE,QAFiB;AAGxBC,QAAAA,OAAO,EAAE;AAHe,OAA1B,CADM,CAAR;AAOD;AACF,GA3CD;AA4CD,CA7CM","sourcesContent":["import { cartActions } from './cart-slice';\nimport { uiActions } from './ui-slice';\n\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://section19-6f56e-default-rtdb.firebaseio.com/cart.json');\n\n      if (!response.ok) {\n        throw new Error('fetch failed!');\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      console.log(cartData);\n\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(\n        uiActions.setNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending Cart data failed!'\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(\n      uiActions.setNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'Sending Cart data!'\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        'https://section19-6f56e-default-rtdb.firebaseio.com/cart.json',\n        {\n          method: 'PUT',\n          body: JSON.stringify(cart),\n          'Content-Type': 'application/json'\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Send Cart Data failed!');\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.setNotification({\n          status: 'success',\n          title: 'Success!',\n          message: 'Sent Cart data successfully!'\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.setNotification({\n          status: 'error',\n          title: 'Error!',\n          message: 'Sending Cart data failed!'\n        })\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}