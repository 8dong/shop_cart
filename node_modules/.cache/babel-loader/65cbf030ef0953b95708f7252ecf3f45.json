{"ast":null,"code":"var _jsxFileName = \"/Users/gimdonghyeon/Desktop/udemy/react/redux-deepdive/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(uiActions.setNotification({\n      status: 'pending',\n      title: 'Sending,,,',\n      message: 'Sending Cart data ,,,'\n    }));\n\n    const sendCartData = async () => {\n      const response = await fetch('https://react-http-be658-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending Cart data failed');\n      }\n\n      const responseData = await response.json();\n    };\n  }, [cart]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ehCohhP2aa32ZqjJpKSQJfg1I0A=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gimdonghyeon/Desktop/udemy/react/redux-deepdive/src/App.js"],"names":["useSelector","useDispatch","useEffect","Cart","Layout","Products","uiActions","App","cartIsVisible","state","ui","cart","notification","dispatch","setNotification","status","title","message","sendCartData","response","fetch","method","body","JSON","stringify","ok","Error","responseData","json"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,aAAa,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASF,aAAnB,CAAjC;AACA,QAAMG,IAAI,GAAGX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACE,IAAhB,CAAxB;AACA,QAAMC,YAAY,GAAGZ,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASE,YAAnB,CAAhC;AAEA,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CACNP,SAAS,CAACQ,eAAV,CAA0B;AACxBC,MAAAA,MAAM,EAAE,SADgB;AAExBC,MAAAA,KAAK,EAAE,YAFiB;AAGxBC,MAAAA,OAAO,EAAE;AAHe,KAA1B,CADM,CAAR;;AAQA,UAAMC,YAAY,GAAG,YAAY;AAC/B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACQ,QAAQ,CAACM,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,YAAMC,YAAY,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAA3B;AACD,KAdD;AAeD,GAxBQ,EAwBN,CAACjB,IAAD,CAxBM,CAAT;AA0BA,sBACE,QAAC,MAAD;AAAA,eACGH,aAAa,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADpB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAvCQD,G;UACeP,W,EACTA,W,EACQA,W,EAEJC,W;;;KALVM,G;AAyCT,eAAeA,GAAf","sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './store/ui-slice';\n\nfunction App() {\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const notification = useSelector(state => state.ui.notification);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      uiActions.setNotification({\n        status: 'pending',\n        title: 'Sending,,,',\n        message: 'Sending Cart data ,,,'\n      })\n    );\n\n    const sendCartData = async () => {\n      const response = await fetch(\n        'https://react-http-be658-default-rtdb.firebaseio.com/cart.json',\n        {\n          method: 'PUT',\n          body: JSON.stringify(cart)\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error('Sending Cart data failed');\n      }\n\n      const responseData = await response.json();\n    };\n  }, [cart]);\n\n  return (\n    <Layout>\n      {cartIsVisible && <Cart />}\n      <Products />\n    </Layout>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}